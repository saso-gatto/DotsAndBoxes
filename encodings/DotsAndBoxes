val(0..1).

pos(K):-size(K).
pos(X):-pos(Y), X=Y-1, X>=0.

%. 1-> orizonale       0 -> vericale

%size(2).
%edge(0,0,0).
%edge(1,0,1).
%edge(0,1,0).
%edge(0,0,1).

% Guess
edge(X,Y,H)| noedge(X,Y,H):- pos(X), pos(Y), val(H).

%Evitano di uscire dai bordi
:- edge(K,_,0),size(K), pos(K).
:- edge(_,K,1),size(K),pos(K).

mossaPrec(0).
maxPrec(N):- #max{M:mossaPrec(M)}=N.
totEdge(K):- #count{X,Y,H:edge(X,Y,H)}=K.
:- totEdge(K), maxPrec(N), K!=N+1.



checkVerticaleUp(X,Y,1):- edge(X+1,Y,1),  edge(X,Y,0),edge(X,Y+1,0),edge(X-1,Y+1,0),edge(X-1,Y,0).
:~ noedge(X,Y,1),checkVerticaleUp(X,Y,1).[1@3,X,Y]

checkVerticaleDown(X,Y,1):-edge(X-1,Y,1),edge(X-1,Y,0),edge(X,Y,0),edge(X-1,Y+1,0),edge(X,Y+1,0).
:~ noedge(X,Y,1), checkVerticaleDown(X,Y,1). [1@3, X,Y]

checkOrizzontaleLeft(X,Y,0):-edge(X,Y+1,0), edge(X,Y,1),edge(X,Y-1,1),edge(X+1,Y,1),edge(X+1,Y-1,1).
:~ noedge(X,Y,0), checkOrizzontaleLeft(X,Y,0). [1@3, X,Y]

checkOrizzontaleRight(X,Y,0):-edge(X,Y-1,0), edge(X,Y-1,1),edge(X,Y,1),edge(X+1,Y-1,1),edge(X+1,Y,1).
:~ noedge(X,Y,0), checkOrizzontaleRight(X,Y,0). [1@3, X,Y]


checkUp(X,Y,1):-edge(X,Y,0), edge(X1,Y,1), edge(X,Y1,0), X1=X+1, Y1=Y+1.
:~ noedge(X,Y,1), checkUp(X,Y,1). [1@2, X,Y]

checkDown(X,Y,1):-edge(X1,Y,0),edge(X1,Y1,0),edge(X1,Y,1), X1=X-1,Y1=Y+1.
:~ noedge(X,Y,1), checkDown(X,Y,1). [1@2, X,Y]

checkLeft(X,Y,0):-edge(X,Y1,0),edge(X,Y,1),edge(X1,Y,1), X1=X+1,Y1=Y+1.
:~ noedge(X,Y,0), checkLeft(X,Y,0). [1@2, X,Y]

checkRight(X,Y,0):-edge(X,Y1,0), edge(X,Y1,1),edge(X1,Y1,1),Y1=Y-1,X1=X+1.
:~ noedge(X,Y,0), checkRight(X,Y,0). [1@2, X,Y]

totVerticali(N):-val(V), #count{X,Y,V:edge(X,Y,V)}=N, V=0.
totOrizzontali(N):-val(V), #count{X,Y,V:edge(X,Y,V)}=N, V=1.
:~ totVerticali(V), totOrizzontali(O), D=V-O, V>O. [D@1]
:~ totVerticali(V), totOrizzontali(O), D=O-V, O>V. [D@1]